#!/bin/sh

################################################################
#
# dotutil
#   - dotfiles manager
#
# written by raptowl on 2019/11/22
#
################################################################

################################################################
# preprocessing
################################################################

# initialize shell environment
set -u
umask 0022
LC_ALL=C
type command > /dev/null 2>&1 && type getconf > /dev/null 2>&1 &&
PATH="$(command -p getconf PATH)${PATH+:}${PATH-}"
UNIX_STD=2003
export LC_ALL PATH UNIX_STD

# load and define functions
. "$DOTFILES_LOC/lib/error_msg.sh"

usage() {
  cat <<_EOT_ >&2
Usage: ${0##*/} [-h | --help] <operation> [<args>]

short description of this command here.

option:
  -h | --help: print out the usage to stderr

<operation>
link     : put symbolic links of config files to the home directory
unlink   : remove symbolic links in the home directory
list     : list up app installers which are available
install  : install app to the local app directory
uninstall: remove app from the local app directory
newsh    : make a new command file from templates
newfunc  : make a new function file from templates
withdraw : remove all of links, local apps, and delete dotfiles directory
_EOT_
  exit 1
}

# catch signals
#trap '' 1 2 3 15

################################################################
# argument parsing
################################################################

# print the usage and exit
case "$# ${1:-}" in
  '1 -h'|'1 --help')
    usage
    ;;
esac

# parse option
while :; do
  case "${1:-}" in
    --)
      shift
      break
      ;;
    -*)
      error_msg "invalid option: $1"
      exit 1
      ;;
    *)
      break
      ;;
  esac
done

################################################################
# main routine
################################################################

# execute the operation
case "$# ${1:-}" in
  '1 link')
    shift
    # put symbolic links of config files to the home directory
    # (no arguments)

    # rename config files which has already existed in ~ and put symbolic links from "$DOTFILES_LOC" to ~
    cd "$DOTFILES_LOC" || exit 1
    printf '%s\n' * .* |
      grep -v \
        -e '^\.$' \
        -e '^\.\.$' \
        -e '^\.config$' \
        -e '^\.git$' \
        -e '^\.gitignore$' \
        -e '^etc$' \
        -e '^lib$' \
        -e '^bin$' \
        -e '^LICENSE$' \
        -e '^README\.md$' |
      sed -e "s%^%$HOME/%" |
      xargs file |
      sed -e 's/: */:/' |
      sed -e 's/^.*$/1__rename_dotold__:&\n2__put_link__:&/' |
      awk -F ':' '
        BEGIN { OFS = ":"; }
        match($1, "1__rename_dotold__") && ! match ($3, "symbolic link to '"$DOTFILES_LOC"'") && $3 !~ /cannot open/ { print $1, $2; }
        match($1, "2__put_link__") && ! match ($3, "symbolic link to '"$DOTFILES_LOC"'") { print $1, $2; }
      ' |
      sort -t ':' -k 1,1 |
      sed -e 's/^1__rename_dotold__:\(.*\)$/mv -f \1 \1.dotold/' |
      sed -e "s%^2__put_link__:$HOME/\(.*\)\$%ln -fs $DOTFILES_LOC/\1 $HOME/\1%"

    # rename config files which has already existed in ~/.config and put symbolic links from "$DOTFILES_LOC"/.config to ~/.config
    [ ! -d "$HOME/.config" ] && mkdir -p "$HOME/.config"  # make a directory ~/.config if it does not exist
    cd "$DOTFILES_LOC/.config" || exit 1
    printf '%s\n' * .* |
      grep -v \
        -e '^\.$' \
        -e '^\.\.$' |
      sed -e "s%^%$HOME/.config/%" |
      xargs file |
      sed -e 's/: */:/' |
      sed -e 's/^.*$/1__rename_dotold__:&\n2__put_link__:&/' |
      awk -F ':' '
        BEGIN { OFS = ":"; }
        match($1, "1__rename_dotold__") && ! match ($3, "symbolic link to '"$DOTFILES_LOC/.config"'") && $3 !~ /cannot open/ { print $1, $2; }
        match($1, "2__put_link__") && ! match ($3, "symbolic link to '"$DOTFILES_LOC/.config"'") { print $1, $2; }
      ' |
      sort -t ':' -k 1,1 |
      sed -e 's/^1__rename_dotold__:\(.*\)$/mv -f \1 \1.dotold/' |
      sed -e "s%^2__put_link__:$HOME/.config/\(.*\)\$%ln -fs $DOTFILES_LOC/.config/\1 $HOME/.config/\1%"
    ;;
  '1 unlink')
    shift
    # remove symbolic links in the home directory
    # (no arguments)

    # remove symbolic links at ~ and rename config files which are the original ones
    cd "$HOME" || exit 1
    printf '%s\n' "$HOME/"* "$HOME/".* |
      xargs file |
      sed -e 's/: */:/' |
      awk -F ':' '
        BEGIN { OFS = ":"; }
        match($2, "symbolic link to '"$DOTFILES_LOC"'") { print "1__del_link__", $1; }
        $1 ~ /\.dotold$/ { print "2__rename_dotold__", $1; }
      ' |
      sort -t ':' -k 1,1 |
      sed -e 's/^1__del_link__:\(.*\)$/rm -f \1/' |
      sed -e 's/^2__rename_dotold__:\(.*\)\.dotold$/mv -f \1.dotold \1/'

    # remove symbolic links at ~/.config and rename config files which are the original ones
    cd "$HOME/.config" || exit 1
    printf '%s\n' "$HOME/.config/"* "$HOME/.config/".* |
      xargs file |
      sed -e 's/: */:/' |
      awk -F ':' '
        BEGIN { OFS = ":"; }
        match($2, "symbolic link to '"$DOTFILES_LOC/.config"'") { print "1__del_link__", $1; }
        $1 ~ /\.dotold$/ { print "2__rename_dotold__", $1; }
      ' |
      sort -t ':' -k 1,1 |
      sed -e 's/^1__del_link__:\(.*\)$/rm -f \1/' |
      sed -e 's/^2__rename_dotold__:\(.*\)\.dotold$/mv -f \1.dotold \1/'
    ;;
  '1 list')
    shift
    # list up app installers which are available
    # (no arguments)

    cd "$DOTFILES_LOC/etc/installer" || exit 1
    printf '%s\n' *
    ;;
  [!1]' install')
    shift
    # install app to the local app directory
    # $1~: the name of apps to install

    for scriptname in "$@"; do
      [ -r "$DOTFILES_LOC/etc/installer/$scriptname" ] || { printf 'ERROR\n'; continue; }
      sh "$DOTFILES_LOC/etc/installer/$scriptname"
    done
    ;;
  [!1]' uninstall')
    shift
    # remove app from the local app directory
    # $1~: the name of apps to uninstall

    for scriptname in "$@"; do
      [ -r "$DOTFILES_LOC/etc/installer/$scriptname" ] || { printf 'ERROR\n'; continue; }
      sh "$DOTFILES_LOC/etc/installer/$scriptname"  # (!todo!) implement an option to run as a uninstaller
    done
    ;;
  '2 newsh')
    shift
    # make a new command file from templates
    # $1: the path of a new sh file

    cp -f "$DOTFILES_LOC/etc/template/command.sh" "$1" || exit 1
    ;;
  '2 newfunc')
    shift
    # make a new function file from templates
    # $1: (optional) the path of a new sh file

    cp -f "$DOTFILES_LOC/etc/template/libfunc.sh" "${1:-./}"
    ;;
  '1 withdraw')
    shift
    # remove all of links, local apps, and delete dotfiles directory
    # (no arguments)
    ;;
  *)
    error_msg "invalid operation or the number of arguments: $*"
    exit 1
    ;;
esac

exit 0
